<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.user.dao.UserDomainMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.user.domain.UserDomain">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="last_logined_at" jdbcType="INTEGER" property="lastLoginedAt" />
    <result column="last_logined_ip" jdbcType="INTEGER" property="lastLoginedIp" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <result column="updated_at" jdbcType="INTEGER" property="updatedAt" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, phone, username, avatar_url, gender, province, city, last_logined_at, last_logined_ip, 
    created_at, updated_at, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_demo_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_demo_user
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_demo_user
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.springboot.user.domain.UserDomain">
    insert into t_demo_user (uid, phone, username, 
      avatar_url, gender, province, 
      city, last_logined_at, last_logined_ip, 
      created_at, updated_at, status
      )
    values (#{uid,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{lastLoginedAt,jdbcType=INTEGER}, #{lastLoginedIp,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=INTEGER}, #{updatedAt,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.user.domain.UserDomain">
    insert into t_demo_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="lastLoginedAt != null">
        last_logined_at,
      </if>
      <if test="lastLoginedIp != null">
        last_logined_ip,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginedAt != null">
        #{lastLoginedAt,jdbcType=INTEGER},
      </if>
      <if test="lastLoginedIp != null">
        #{lastLoginedIp,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.user.domain.UserDomain">
    update t_demo_user
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginedAt != null">
        last_logined_at = #{lastLoginedAt,jdbcType=INTEGER},
      </if>
      <if test="lastLoginedIp != null">
        last_logined_ip = #{lastLoginedIp,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.user.domain.UserDomain">
    update t_demo_user
    set phone = #{phone,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      last_logined_at = #{lastLoginedAt,jdbcType=INTEGER},
      last_logined_ip = #{lastLoginedIp,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>